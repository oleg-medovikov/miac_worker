import glob
import pandas as pd
from datetime import datetime, timedelta

from base import covid_insert
from clas import Dir

# замена названий
CHANGE_MO = {
    'ООО "Городские поликлиники"': 'ООО «Городские поликлиники»',
    'ООО "Участковые врачи"': 'ООО "УЧАСТКОВЫЕ ВРАЧИ"',
    'СПб ГБУЗ "Городская поликлиника №111"':
    'СПб ГБУЗ "Городская поликлиника № 111"',
    'СПб ГБУЗ "Городская поликлиника №117"':
    'СПб ГБУЗ "Городская поликлиника № 117"',
    'СПб ГБУЗ "Городская поликлиника №17"': 'ГБУЗ ГП №17',
    'СПб ГБУЗ "Городская поликлиника №22"':
    'СПб ГБУЗ "Городская поликлиника № 22"',
    'СПб ГБУЗ "Городская поликлиника №27"': 'СПб ГБУЗ "ГП №27"',
    'СПб ГБУЗ "Городская поликлиника №28"': 'СПб ГБУЗ "Поликлиника №28"',
    'СПб ГБУЗ "Городская поликлиника №32"':
    'СПб ГБУЗ "Городская поликлиника № 32"',
    'СПб ГБУЗ "Городская поликлиника №37"': 'СПб ГБУЗ "Поликлиника №37"',
    'СПб ГБУЗ "Городская поликлиника №54"':
    'СПб ГБУЗ "Городская поликлиника № 54"',
    'СПб ГБУЗ "Городская поликлиника №56"': 'СПБ ГБУЗ "ГП № 56"',
    'СПб ГБУЗ "Городская поликлиника №71"': 'СПб ГБУЗ "ГП №71"',
    'СПб ГБУЗ "Городская поликлиника №8"':
    'СПб ГБУЗ "Городская поликлиника № 8"',
    'СПб ГБУЗ "Городская поликлиника №87"':
    'СПб ГБУЗ "Городская поликлиника № 87"',
    'СПб ГБУЗ "Городская поликлиника №88"': 'СПб ГБУЗ "Поликлиника №88"',
    'СПб ГБУЗ "Городская поликлиника №95"': 'СПб ГБУЗ ГП № 95',
    'СПб ГБУЗ "Городская поликлиника №96"':
    'СПб ГБУЗ «Городская поликлиника № 96»',
    'СПб ГБУЗ "Городская поликлиника №98"': 'СПб ГБУЗ "Поликлиника №98"',
    'СПб ГБУЗ "Детская городская поликлиника №29"': 'СПб ГБУЗ "ДГП №29"',
    'СПб ГБУЗ "Детская городская поликлиника №44"': 'СПБ ГБУЗ "ДГП № 44"',
    'СПб ГБУЗ "Детская городская поликлиника №49" Пушкинского района':
    'СПб ГБУЗ ДГП № 49',
    'СПб ГБУЗ "Детская городская поликлиника №51"': 'СПБ ГБУЗ "ДГП № 51"',
    'СПб ГБУЗ "Городская поликлиника №63"': 'СПб ГБУЗ "ГП №63"',
    'СПб ГБУЗ "Детская городская поликлиника №71"': 'СПб ГБУЗ "ДГП № 71"',
    'СПб ГБУЗ "Детская городская поликлиника №73"': 'СПб ГБУЗ "ДГП №73"',
    'СПб ГБУЗ "Детская поликлиника №30"': 'СПб ГБУЗ ДП № 30',
    'ФГБОУ ВО ПСПбГМУ им. И.П.Павлова" Минздрава России':
    'ФГБОУ ВО ПСПбГМУ им. И.П.Павлова Минздрава России',
    'ФГБОУ ВО СЗГМУ им.И.И.Мечникова Минздрава России':
    'ФГБОУ ВО СЗГМУ им. И.И. Мечникова Минздрава России',
    'СПб ГБУЗ "Городская поликлиника №24"': 'СПб ГБУЗ ГП-24',
    'ООО "СОВРЕМЕННАЯ МЕДИЦИНА"': 'ООО "Современная медицина"',
    'СПб ГБУЗ "Городская поликлиника №44"': 'Городская поликлиника №44',
    'СПб ГБУЗ "Детская городская поликлиника №68"': 'СПБ ГБУЗ ДГП № 68',
   }

# Список больниц с поликлиниками
POL_BOL = [
  'ФГБОУ ВО СЗГМУ им. И.И. Мечникова Минздрава России',
  'ФГБОУ ВО ПСПбГМУ им. И.П.Павлова Минздрава России',
  'СПб ГБУЗ "Городская больница №40"',
  'СПб ГБУЗ "Городская больница №20"',
  'СПб ГБУЗ "Николаевская больница"'
]


def sverka_fr_otcheta():
    "Это мы сверяем с выгрузкой 12:00"

    DATE_OTCH = datetime.now().strftime("%Y_%m_%d")
    MASK = Dir.get('path_robot') + '/' + DATE_OTCH + '/' \
        + 'Федеральный*[!ИАЦ]*12-00.xlsx'

    try:
        FILE_FR = glob.glob(MASK)[0]
    except IndexError:
        return 'Не найден двенадцатичасовой федеральный регистр'

    MASK = Dir.get('path_robot') + '/' + DATE_OTCH + '/' \
        + 'Поликлиники*.xlsx'

    try:
        FILE_VP = glob.glob(MASK)[0]
    except IndexError:
        return 'Не найден файл Поликлиники.xlsx'

    cols = [
            'Медицинская организация', 'Диагноз',
            'Дата исхода заболевания', 'Исход заболевания',
            'Вид лечения'
            ]
    FR = pd.read_csv(
        FILE_FR,
        usecols=cols,
        sep=';',
        engine='python',
        encoding='utf-8'
        )

    names = ['mo', 'cov_il', 'cov_rec']
    VP = pd.read_excel(
        FILE_VP,
        usecols='A,C,U',
        header=5,
        names=names
        ).dropna()

    VP = VP.fillna(0)
    # меняем названия МО
    VP['mo'] = VP['mo'].apply(lambda x: CHANGE_MO.get(x)
                              if CHANGE_MO.get(x) is not None else x)

    VP = VP.groupby('mo', as_index=False)['cov_il', 'cov_rec'].sum()

    VP_IL = VP.loc[VP['cov_il'] > 0]
    VP_IL.index = range(len(VP_IL))
    del VP_IL['cov_rec']

    VP_REC = VP.loc[VP['cov_rec'] > 0]
    VP_REC.index = range(len(VP_REC))
    del VP_REC['cov_il']

    FR = FR.drop(
        FR[FR['Медицинская организация'].isin(POL_BOL)
           & FR['Вид лечения'].isin(['Стационарное лечение', 'Карантин'])
           ].index)

    DIAGNOZ = {
            'ФР диагноз U07.1': 'U07.1',
            'ФР диагноз U07.2': 'U07.2',
            'ФР диагноз Z22.8': 'Z22.8',
            }

    FR[list(DIAGNOZ.keys())] = None

    for key, value in DIAGNOZ.items():
        FR.loc[FR['Диагноз'].isin([value])
               & FR['Исход заболевания'].isnull(),
               key] = 1

    FR_IL = FR.groupby(
        'Медицинская организация',
        as_index=False
        )[list(DIAGNOZ.keys())].sum()

    FR[list(DIAGNOZ.keys())] = None
    for key, value in DIAGNOZ.items():
        FR.loc[FR['Диагноз'].isin([value])
               & FR['Исход заболевания'].str.contains('Выздоровление'),
               key] = 1

    FR_REC = FR.groupby(
        'Медицинская организация',
        as_index=False
        )[list(DIAGNOZ.keys())].sum()




